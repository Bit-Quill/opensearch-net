name: Tests


on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.editorconfig'
  push:
    paths-ignore:
      - 'README.md'
      - '.editorconfig'
    branches:
      - main
      - master
      - '[0-9]+.[0-9]+'
      - '[0-9]+.x'
      - 'dev-*'

jobs:
  unit-tests:
    name: Unit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.405'
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - run: dotnet nuget locals all --clear
        name: Clear nuget cache
      - name: Test
        if: ${{ matrix.os == 'windows-latest' }}
        run: .\build.bat test --report
      - name: Test
        if: ${{ matrix.os != 'windows-latest' }}
        run: ./build.sh test --report
      - name: Test Results
        if: always()
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: 'build/output/junit-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_failure: true
          require_tests: true
          check_name: Unit Test Results
        # This is the only way to get test reports out from GitHub Actions
        # TODO remove this before release
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: unit-test-report
          path: build/output/*

          
  # Packages nuget packages first and then uses the nuget packages to test
  # Also builds versioned nuget packages
  canary-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.405'
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Test
        if: ${{ matrix.os == 'windows-latest' }}
        run: .\build.bat canary --report
      - name: Test
        if: ${{ matrix.os != 'windows-latest' }}
        run: ./build.sh canary --report
      - name: Test Results
        if: always()
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: 'build/output/junit-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_failure: true
          require_tests: true
          check_name: Canary Test Results
        # This is the only way to get test reports out from GitHub Actions
        # TODO remove this before release
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: canary-test-report
          path: build/output/*

